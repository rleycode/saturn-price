#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
"""

import os
from bitrix_integration import BitrixClient, BitrixConfig
from dotenv import load_dotenv

def test_sync():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    env_path = os.path.join(os.path.dirname(__file__), '.env')
    load_dotenv(env_path)
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config = BitrixConfig(
        mysql_host=os.getenv('BITRIX_MYSQL_HOST', 'localhost'),
        mysql_port=int(os.getenv('BITRIX_MYSQL_PORT', 3306)),
        mysql_database=os.getenv('BITRIX_MYSQL_DATABASE', 'sitemanager'),
        mysql_username=os.getenv('BITRIX_MYSQL_USERNAME', 'bitrix_sync'),
        mysql_password=os.getenv('BITRIX_MYSQL_PASSWORD', ''),
        iblock_id=int(os.getenv('BITRIX_IBLOCK_ID', 11)),
        supplier_prefix=os.getenv('SUPPLIER_PREFIX', '—Ç–æ–≤-')
    )
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º: '{config.supplier_prefix}'")
    print("-" * 60)
    
    with BitrixClient(config) as bitrix:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥
        products = bitrix.get_products_by_prefix()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        if products:
            print("\nüì¶ –ü–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤:")
            for i, product in enumerate(products[:5]):
                print(f"  {i+1}. ID: {product.id}, –ê—Ä—Ç–∏–∫—É–ª: {product.article}, –ù–∞–∑–≤–∞–Ω–∏–µ: {product.name[:50]}...")
        else:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            cursor = bitrix.connection.cursor(dictionary=True)
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ CML2_ARTICLE
            cursor.execute("""
            SELECT ID, CODE, NAME 
            FROM b_iblock_property 
            WHERE IBLOCK_ID = %s AND CODE = 'CML2_ARTICLE'
            """, (config.iblock_id,))
            
            prop_result = cursor.fetchone()
            if prop_result:
                print(f"‚úÖ –ü–æ–ª–µ CML2_ARTICLE –Ω–∞–π–¥–µ–Ω–æ: ID={prop_result['ID']}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —ç—Ç–æ–º –ø–æ–ª–µ —Å –Ω–∞—à–∏–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
                cursor.execute("""
                SELECT COUNT(*) as count
                FROM b_iblock_element_property p
                WHERE p.IBLOCK_PROPERTY_ID = %s
                AND p.VALUE LIKE %s
                """, (prop_result['ID'], f"{config.supplier_prefix}%"))
                
                count_result = cursor.fetchone()
                print(f"üìä –ó–Ω–∞—á–µ–Ω–∏–π —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{config.supplier_prefix}': {count_result['count']}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —ç—Ç–∏–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
                cursor.execute("""
                SELECT COUNT(*) as count
                FROM b_iblock_element e
                JOIN b_iblock_element_property p ON e.ID = p.IBLOCK_ELEMENT_ID
                WHERE e.IBLOCK_ID = %s 
                AND e.ACTIVE = 'Y'
                AND p.IBLOCK_PROPERTY_ID = %s
                AND p.VALUE LIKE %s
                """, (config.iblock_id, prop_result['ID'], f"{config.supplier_prefix}%"))
                
                active_count = cursor.fetchone()
                print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º: {active_count['count']}")
            else:
                print("‚ùå –ü–æ–ª–µ CML2_ARTICLE –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            
            cursor.close()

if __name__ == "__main__":
    test_sync()
