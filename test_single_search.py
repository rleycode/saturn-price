#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Saturn
"""

import requests
from bs4 import BeautifulSoup
import time

def test_saturn_search(sku: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    
    # URL –ø–æ–∏—Å–∫–∞ Saturn
    search_url = f"https://nnv.saturn.net/catalog/?sp%5Bname%5D=1&sp%5Bartikul%5D=1&search=&s=—Ç–æ–≤-{sku}"
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞: —Ç–æ–≤-{sku}")
    print(f"üìç URL: {search_url}")
    
    try:
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(search_url, headers=headers, timeout=10)
        response.raise_for_status()
        
        print(f"‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        
        # –ü–∞—Ä—Å–∏–º HTML
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω–æ–≤—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
        product_items = soup.find_all('div', class_='h_s_list_categor_item_wrap')
        print(f"üõçÔ∏è –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ h_s_list_categor_item_wrap: {len(product_items)}")
        
        # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        old_items = soup.find_all('div', class_='catalog-item')
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ catalog-item (—Å—Ç–∞—Ä—ã–π): {len(old_items)}")
        
        if not product_items:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª–∞—Å—Å—ã
            all_divs = soup.find_all('div')
            print(f"üìä –í—Å–µ–≥–æ div —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(all_divs)}")
            
            # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –≤ –Ω–æ–≤—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–∞—Ö
            article_elems = soup.find_all('p', class_='h_s_list_categor_item_articul')
            print(f"üè∑Ô∏è –ù–∞–π–¥–µ–Ω–æ p.h_s_list_categor_item_articul: {len(article_elems)}")
            
            # –ò—â–µ–º –ª—é–±—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º '—Ç–æ–≤-'
            all_with_tov = soup.find_all(string=lambda text: text and '—Ç–æ–≤-' in text.lower())
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ª—é–±—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å '—Ç–æ–≤-': {len(all_with_tov)}")
            
            for elem in article_elems[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  - {elem.get_text(strip=True)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞ —Å '—Ç–æ–≤-'
            for text in all_with_tov[:5]:
                if text.strip():
                    print(f"  üìÑ –¢–µ–∫—Å—Ç: {text.strip()}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            with open(f"debug_search_{sku}.html", "w", encoding='utf-8') as f:
                f.write(response.text)
            print(f"üíæ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug_search_{sku}.html")
            
            return False
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        found_target = False
        for i, item in enumerate(product_items):
            print(f"\nüì¶ –¢–æ–≤–∞—Ä #{i+1}:")
            
            # –ò—â–µ–º –∞—Ä—Ç–∏–∫—É–ª —Å –Ω–æ–≤—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
            article_elem = item.find('p', class_='h_s_list_categor_item_articul')
            if article_elem:
                article_text = article_elem.get_text(strip=True)
                print(f"  üè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: {article_text}")
                
                if f"—Ç–æ–≤-{sku}" in article_text:
                    found_target = True
                    print(f"  ‚úÖ –ù–ê–ô–î–ï–ù —Ü–µ–ª–µ–≤–æ–π —Ç–æ–≤–∞—Ä!")
            
            # –ò—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –Ω–æ–≤—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
            name_elem = item.find('a', class_='h_s_list_categor_item')
            if name_elem:
                name = name_elem.get_text(strip=True)
                print(f"  üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            
            # –ò—â–µ–º —Ü–µ–Ω—É —Å –Ω–æ–≤—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
            price_elem = item.find('span', class_='shopping_cart_goods_list_item_sum_item')
            if price_elem:
                price_text = price_elem.get_text(strip=True)
                print(f"  üí∞ –¶–µ–Ω–∞: {price_text}")
            else:
                # –ò—â–µ–º —Ü–µ–Ω—É –≤ —Ç–µ–∫—Å—Ç–µ —Ç–æ–≤–∞—Ä–∞
                import re
                item_text = item.get_text()
                price_match = re.search(r'(\d+[,.]?\d*)\s*‚ÇΩ', item_text)
                if price_match:
                    print(f"  üí∞ –¶–µ–Ω–∞ (regex): {price_match.group(0)}")
                else:
                    print(f"  ‚ùå –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        if found_target:
            print(f"\nüéâ –¢–æ–≤–∞—Ä —Ç–æ–≤-{sku} –ù–ê–ô–î–ï–ù –Ω–∞ —Å–∞–π—Ç–µ!")
            return True
        else:
            print(f"\n‚ùå –¢–æ–≤–∞—Ä —Ç–æ–≤-{sku} –ù–ï –ù–ê–ô–î–ï–ù —Å—Ä–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏–∑ –ª–æ–≥–æ–≤
    test_skus = ["103516", "114289", "114290", "138859", "037103"]
    
    for sku in test_skus:
        print("="*60)
        result = test_saturn_search(sku)
        time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
        if result:
            break  # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
